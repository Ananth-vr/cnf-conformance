name: Crystal Specs
on: [push, pull_request]
jobs:
  spec:
    name: Crystal Specs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spec_file: ["spec/prereqs_spec.cr", "spec/setup_spec.cr"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Kubectl
        run: |
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -; \
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list; \
          sudo apt-get update ; \
          sudo apt-get install -y kubectl=<<parameters.kubectl_version>> 
          
      - name: Install Clusterctl
        run: |
          curl -L https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.10/clusterctl-linux-amd64 -o clusterctl
          chmod +x ./clusterctl
          sudo mv ./clusterctl /usr/local/bin/clusterctl
               
      - name: Install Golang
        run: |
          sudo apt install -y --no-install-recommends \
          gnupg2 \
          g++ \
          gcc \
          libc6-dev \
          make \
          pkg-config 
          
          wget -O go.tgz.asc "<<parameters.golang_url>><<parameters.golang_version>>.<<parameters.golang_file>>.asc" --progress=dot:giga; \
          wget -O go.tgz "<<parameters.golang_url>><<parameters.golang_version>>.<<parameters.golang_file>>" --progress=dot:giga
          
          echo "<<parameters.golang_sha>> *go.tgz" | sha256sum --strict --check -; \
          export GNUPGHOME="$(mktemp -d)"
          retry "gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'"
          gpg --batch --verify go.tgz.asc go.tgz; \
          gpgconf --kill all || true; \
          rm -rf "$GNUPGHOME" go.tgz.asc
          
          sudo tar -C /usr/local -xzf go.tgz; \
          sudo mkdir -p "<<parameters.golang_path>>/src" "<<parameters.golang_path>>/bin" && sudo chmod -R 777 "<<parameters.golang_path>>"; \
          rm go.tgz
      - name: Install Crystal
        run: |
          wget -O crystal.deb "<<parameters.crystal_url>>/<<parameters.crystal_version>>/crystal_<<parameters.crystal_version>>-1_amd64.deb" --progress=dot:giga; 
          sudo apt install -y --no-install-recommends \
          git \
          libssl-dev \
          libxml2-dev \
          libyaml-dev \
          libgmp-dev \
          libz-dev \
          ./crystal.deb \
          && sudo rm -rf /var/lib/apt/lists/*
      - name: Install Helm
        run: |
          wget -O helm.tgz.asc "<<parameters.helm_asc>>/<<parameters.helm_version>>/helm-<<parameters.helm_version>>-<<parameters.helm_file>>.asc" --progress=dot:giga; \
          wget -O helm.tgz "<<parameters.helm_url>>-<<parameters.helm_version>>-<<parameters.helm_file>>" --progress=dot:giga
          
          echo "<<parameters.helm_sha>> *helm.tgz" | sha256sum --strict --check -; \
          export GNUPGHOME="$(mktemp -d)"
          retry "gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys '967F 8AC5 E221 6F9F 4FD2 70AD 92AA 783C BAAE 8E3B'"
          gpg --batch --verify helm.tgz.asc helm.tgz; \
          gpgconf --kill all || true; \
          rm -rf "$GNUPGHOME" helm.tgz.asc
          sudo tar --strip-components 1 -C /usr/local/bin -xzf helm.tgz; \
          helm repo add stable https://kubernetes-charts.storage.googleapis.com; \
          rm helm.tgz
      - name: Install Kind 
        run: |
          export PATH=<<parameters.golang_path>>/bin:$PATH
          export PATH=$/usr/local/go/bin:$PATH
          GO111MODULE="on" go get sigs.k8s.io/kind@<<parameters.kind_version>>
      - name: Install Kustomize 
        run: |
          export PATH=<<parameters.golang_path>>/bin:$PATH
          export PATH=$/usr/local/go/bin:$PATH
          GO111MODULE=on go get sigs.k8s.io/kustomize/kustomize/v3
      - name: Create Kind Cluster 
        run: |
          export PATH=<<parameters.golang_path>>/bin:$PATH
          export PATH=$/usr/local/go/bin:$PATH
          kind create cluster
          kubectl get nodes 
      - name: Setup CNF-Conformance
        run: |
          shards install  
          crystal src/cnf-conformance.cr setup
      - name: Run Crystal Spec
        run: |
          LOG_LEVEL=info crystal spec --warnings none ${{ matrix.spec_file }} -v
