language: minimal

# crystal:
#   - 'latest'

services:
  - docker

jobs:
  include:
    - stage: K8s
      before_script:
        - |
          if [ -z "${SSH_KEY+x}" ]; then
          # Download and install go
            wget https://dl.google.com/go/go1.13.linux-amd64.tar.gz
            tar -xvf go1.13.linux-amd64.tar.gz
            sudo mv go /usr/local
            export GOROOT=/usr/local/go
            export GOPATH=$HOME/go
            export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          # Download and install KinD
            GO111MODULE=on go get sigs.k8s.io/kind
          # Download and install Crystal
            sudo apt update && sudo apt install -y libevent-dev
            wget https://github.com/crystal-lang/crystal/releases/download/0.35.1/crystal-0.35.1-1-linux-x86_64.tar.gz
            tar -xvf crystal-*.tar.gz
            export PATH=$(pwd)/crystal-0.35.1-1/bin:$PATH
            crystal version
          # Create a new Kubernetes cluster using KinD
            kind create cluster
          # Download and install kubectl
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          # Run Crystal Spec
            shards install
            crystal spec -v || travis_terminate 1;
          else
            base64 -d <<< $SSH_KEY > ~/.ssh/id_rsa
            chmod 400 ~/.ssh/id_rsa
            eval $(ssh-agent)
            ssh-add ~/.ssh/id_rsa
            touch $(pwd)/.github-env
            cat <<< "export GITHUB_USER=$GITHUB_USER" > $(pwd)/.github-env
            cat <<< "export GITHUB_TOKEN=$GITHUB_TOKEN" >> $(pwd)/.github-env
            export TIME=$(date +%s)
          # Install CNF-Conformance
            scp -o StrictHostKeyChecking=no -rp $(pwd) root@147.75.55.141:/tmp/$TIME
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "cd /tmp/$TIME ; git fetch --tags" || travis_terminate 1
          # Download and install go
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 wget https://dl.google.com/go/go1.13.linux-amd64.tar.gz || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 tar -xvf go1.13.linux-amd64.tar.gz || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 mv go /tmp/$TIME/go || travis_terminate 1
          # Download and install KinD
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 GOROOT=/tmp/$TIME/go GOPATH=\$HOME/go PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH GO111MODULE=on go get sigs.k8s.io/kind || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 GOROOT=/tmp/$TIME/go GOPATH=\$HOME/go PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH kind create cluster --kubeconfig /tmp/$TIME/kubeconfig --name $TIME || travis_terminate 1
          # Setup ephemeral dev env
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "cd /tmp/$TIME ; docker run --rm -it -v \$(pwd):/workspace -w /workspace crystallang/crystal:0.35.1-alpine shards install" || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "cd /tmp/$TIME ; docker run --rm -it -v \$(pwd):/workspace -w /workspace crystallang/crystal:0.35.1-alpine crystal build tools/ephemeral_env/ephemeral_env.cr --release --static --link-flags '-lxml2 -llzma'" || travis_terminate 1
            cat <<< "/tmp/$TIME/ephemeral_env command alias \$@" > ./crystal
            chmod +x ./crystal
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 mkdir -p /tmp/$TIME/crystal_dir || travis_terminate 1
            scp -o StrictHostKeyChecking=no $(pwd)/crystal root@147.75.55.141:/tmp/$TIME/crystal_dir/crystal
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "cd /tmp/$TIME/ ; \$(pwd)/ephemeral_env setup -b \$(pwd)/ephemeral_env" || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "cd /tmp/$TIME/ ; source .github-env ; \$(pwd)/ephemeral_env create_env -n $TIME -k /tmp/$TIME/kubeconfig" || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 PATH=/tmp/$TIME/crystal_dir:\$PATH CRYSTAL_DEV_ENV=$TIME crystal version || travis_terminate 1
            ssh -o StrictHostKeyChecking=no -t root@147.75.55.141 "export PATH=/tmp/$TIME/crystal_dir:\$PATH CRYSTAL_DEV_ENV=$TIME ; cd /tmp/$TIME ; crystal spec -v" || travis_terminate 1
          fi
      script: 
        - docker pull crystallang/crystal:0.35.1-alpine
        - docker run --rm -it -v $PWD:/workspace -w /workspace crystallang/crystal:0.35.1-alpine shards install
        - docker run --rm -it -v $PWD:/workspace -w /workspace crystallang/crystal:0.35.1-alpine crystal build src/cnf-conformance.cr --release --static --link-flags "-lxml2 -llzma"
        - |
          if [ -z "${GITHUB_USER+x}" ] || [ -z "${GITHUB_TOKEN+x}" ]; then
            exit 0
          else
            ./cnf-conformance upsert_release
          fi
