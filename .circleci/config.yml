# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
# orbs:
#   docker: circleci/docker@1.4.0

jobs:
  build:
    docker:
      - image: docker:latest
    steps: 
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: |
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
          docker build -t conformance/base:latest -f .circleci/Dockerfile .
          docker push conformance/base:latest

  cnf_conformance: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/cnf_conformance_spec.cr -v
          exit 1

  configuration_lifecycle: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/configuration_lifecycle_spec.cr -v

  curl_install: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/curl_install_spec.cr -v

  installability: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/installability_spec.cr -v

  microservice: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/microservice_spec.cr -v

  prereqs: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/prereqs_spec.cr -v

  resilience: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/resilience_spec.cr -v

  security: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/security_spec.cr -v

  setup: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/setup_spec.cr -v

  spec_helper: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/spec_helper.cr -v

  statelessness: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/statelessness_spec.cr -v

  utils: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/utils -v

  platform: 
    docker:
      - image: conformance/base:latest
    working_directory: /mnt/ramdisk
    steps: 
      - setup_remote_docker
      - checkout
      - run: |
          kind create cluster
          shards install  
          crystal src/cnf-conformance.cr setup
          LOG_LEVEL=info crystal spec spec/platform -v

# Orchestrate or schedule a set of jobs
workflows:
  test:
    jobs:
      - build
      - cnf_conformance:
          requires:
            - build
      # - configuration_lifecycle:
      #     requires:
      #       - build
      # - curl_install:
      #     requires:
      #       - build
      # - installability:
      #     requires:
      #       - build
      # - microservice:
      #     requires:
      #       - build
      # - prereqs:
      #     requires:
      #       - build
      # - resilience:
      #     requires:
      #       - build
      # - security:
      #     requires:
      #       - build
      # - setup:
      #     requires:
      #       - build
      # - spec_helper:
      #     requires:
      #       - build
      # - statelessness:
      #     requires:
      #       - build
      # - utils:
      #     requires:
      #       - build
      # - platform:
      #     requires:
      #       - build
